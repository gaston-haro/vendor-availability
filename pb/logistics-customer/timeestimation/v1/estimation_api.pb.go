// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: timeestimation/v1/estimation_api.proto

package v1

import (
	v1 "github.com/deliveryhero/logistics-customer/domain/v1"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TES multiple vendor request payload.
type MultipleVendorsEstimationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GlobalEntityId string       `protobuf:"bytes,1,opt,name=global_entity_id,json=globalEntityId,proto3" json:"global_entity_id,omitempty"`
	Customer       *v1.Customer `protobuf:"bytes,2,opt,name=customer,proto3" json:"customer,omitempty"`
	Vendors        []*v1.Vendor `protobuf:"bytes,3,rep,name=vendors,proto3" json:"vendors,omitempty"`
	// hurrier_country_code differs from global_entity country. hurrier can have multiple codes for a single GE country
	// eg: total GEs in TESP are 57 whereas unique country_codes in courier_geo_zone table are 63
	CountryCode string `protobuf:"bytes,4,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
}

func (x *MultipleVendorsEstimationRequest) Reset() {
	*x = MultipleVendorsEstimationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timeestimation_v1_estimation_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultipleVendorsEstimationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultipleVendorsEstimationRequest) ProtoMessage() {}

func (x *MultipleVendorsEstimationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timeestimation_v1_estimation_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultipleVendorsEstimationRequest.ProtoReflect.Descriptor instead.
func (*MultipleVendorsEstimationRequest) Descriptor() ([]byte, []int) {
	return file_timeestimation_v1_estimation_api_proto_rawDescGZIP(), []int{0}
}

func (x *MultipleVendorsEstimationRequest) GetGlobalEntityId() string {
	if x != nil {
		return x.GlobalEntityId
	}
	return ""
}

func (x *MultipleVendorsEstimationRequest) GetCustomer() *v1.Customer {
	if x != nil {
		return x.Customer
	}
	return nil
}

func (x *MultipleVendorsEstimationRequest) GetVendors() []*v1.Vendor {
	if x != nil {
		return x.Vendors
	}
	return nil
}

func (x *MultipleVendorsEstimationRequest) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

// TES multiple vendor response payload.
type MultipleVendorsEstimationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Estimation []*MultiVendorTimeEstimation `protobuf:"bytes,1,rep,name=estimation,proto3" json:"estimation,omitempty"`
}

func (x *MultipleVendorsEstimationResponse) Reset() {
	*x = MultipleVendorsEstimationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timeestimation_v1_estimation_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultipleVendorsEstimationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultipleVendorsEstimationResponse) ProtoMessage() {}

func (x *MultipleVendorsEstimationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timeestimation_v1_estimation_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultipleVendorsEstimationResponse.ProtoReflect.Descriptor instead.
func (*MultipleVendorsEstimationResponse) Descriptor() ([]byte, []int) {
	return file_timeestimation_v1_estimation_api_proto_rawDescGZIP(), []int{1}
}

func (x *MultipleVendorsEstimationResponse) GetEstimation() []*MultiVendorTimeEstimation {
	if x != nil {
		return x.Estimation
	}
	return nil
}

// TES single vendor request payload.
type SingleVendorEstimationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GlobalEntityId string       `protobuf:"bytes,1,opt,name=global_entity_id,json=globalEntityId,proto3" json:"global_entity_id,omitempty"`
	Customer       *v1.Customer `protobuf:"bytes,2,opt,name=customer,proto3" json:"customer,omitempty"`
	Vendor         *v1.Vendor   `protobuf:"bytes,3,opt,name=vendor,proto3" json:"vendor,omitempty"`
	// Order part is mandatory for single vendor requests.
	Order *v1.Order `protobuf:"bytes,4,opt,name=order,proto3" json:"order,omitempty"`
	// hurrier_country_code differs from global_entity country. hurrier can have multiple codes for a single GE country
	// eg: total GEs in TESP are 57 whereas unique country_codes in courier_geo_zone table are 63
	CountryCode string `protobuf:"bytes,5,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
}

func (x *SingleVendorEstimationRequest) Reset() {
	*x = SingleVendorEstimationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timeestimation_v1_estimation_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleVendorEstimationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleVendorEstimationRequest) ProtoMessage() {}

func (x *SingleVendorEstimationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timeestimation_v1_estimation_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleVendorEstimationRequest.ProtoReflect.Descriptor instead.
func (*SingleVendorEstimationRequest) Descriptor() ([]byte, []int) {
	return file_timeestimation_v1_estimation_api_proto_rawDescGZIP(), []int{2}
}

func (x *SingleVendorEstimationRequest) GetGlobalEntityId() string {
	if x != nil {
		return x.GlobalEntityId
	}
	return ""
}

func (x *SingleVendorEstimationRequest) GetCustomer() *v1.Customer {
	if x != nil {
		return x.Customer
	}
	return nil
}

func (x *SingleVendorEstimationRequest) GetVendor() *v1.Vendor {
	if x != nil {
		return x.Vendor
	}
	return nil
}

func (x *SingleVendorEstimationRequest) GetOrder() *v1.Order {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *SingleVendorEstimationRequest) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

// TES single vendor response payload.
type SingleVendorEstimationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Estimation *SingleVendorTimeEstimation `protobuf:"bytes,1,opt,name=estimation,proto3" json:"estimation,omitempty"`
}

func (x *SingleVendorEstimationResponse) Reset() {
	*x = SingleVendorEstimationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timeestimation_v1_estimation_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleVendorEstimationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleVendorEstimationResponse) ProtoMessage() {}

func (x *SingleVendorEstimationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timeestimation_v1_estimation_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleVendorEstimationResponse.ProtoReflect.Descriptor instead.
func (*SingleVendorEstimationResponse) Descriptor() ([]byte, []int) {
	return file_timeestimation_v1_estimation_api_proto_rawDescGZIP(), []int{3}
}

func (x *SingleVendorEstimationResponse) GetEstimation() *SingleVendorTimeEstimation {
	if x != nil {
		return x.Estimation
	}
	return nil
}

var File_timeestimation_v1_estimation_api_proto protoreflect.FileDescriptor

var file_timeestimation_v1_estimation_api_proto_rawDesc = []byte{
	0x0a, 0x26, 0x74, 0x69, 0x6d, 0x65, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x76, 0x31, 0x2f, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x74, 0x69, 0x6d, 0x65, 0x65, 0x73,
	0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x13, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x76, 0x31, 0x2f, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa6, 0x02, 0x0a, 0x20, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x45, 0x73,
	0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x48, 0x0a, 0x10, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0xfa, 0x42, 0x1b, 0x72, 0x19,
	0x10, 0x01, 0x32, 0x15, 0x5e, 0x5b, 0x41, 0x2d, 0x5a, 0x5d, 0x7b, 0x32, 0x2c, 0x33, 0x7d, 0x5f,
	0x5b, 0x41, 0x2d, 0x5a, 0x5d, 0x7b, 0x32, 0x7d, 0x24, 0x52, 0x0e, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x08, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x07, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x92, 0x01, 0x05,
	0x08, 0x01, 0x10, 0xd8, 0x36, 0x52, 0x07, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x12, 0x43,
	0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x20, 0xfa, 0x42, 0x1d, 0x72, 0x1b, 0x32, 0x19, 0x5b, 0x61, 0x2d,
	0x7a, 0x5d, 0x7b, 0x32, 0x2c, 0x33, 0x7d, 0x28, 0x2d, 0x5b, 0x61, 0x2d, 0x7a, 0x5d, 0x7b, 0x32,
	0x2c, 0x33, 0x7d, 0x29, 0x3f, 0x24, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x22, 0x71, 0x0a, 0x21, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x56,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0a, 0x65, 0x73, 0x74, 0x69,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x74,
	0x69, 0x6d, 0x65, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x54, 0x69, 0x6d, 0x65,
	0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x65, 0x73, 0x74, 0x69,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd0, 0x02, 0x0a, 0x1d, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x10, 0x67, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x1e, 0xfa, 0x42, 0x1b, 0x72, 0x19, 0x10, 0x01, 0x32, 0x15, 0x5e, 0x5b, 0x41,
	0x2d, 0x5a, 0x5d, 0x7b, 0x32, 0x2c, 0x33, 0x7d, 0x5f, 0x5b, 0x41, 0x2d, 0x5a, 0x5d, 0x7b, 0x32,
	0x7d, 0x24, 0x52, 0x0e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x39, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01,
	0x02, 0x10, 0x01, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x33, 0x0a,
	0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x06, 0x76, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x12, 0x30, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x43, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x20, 0xfa, 0x42, 0x1d, 0x72,
	0x1b, 0x32, 0x19, 0x5b, 0x61, 0x2d, 0x7a, 0x5d, 0x7b, 0x32, 0x2c, 0x33, 0x7d, 0x28, 0x2d, 0x5b,
	0x61, 0x2d, 0x7a, 0x5d, 0x7b, 0x32, 0x2c, 0x33, 0x7d, 0x29, 0x3f, 0x24, 0x52, 0x0b, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x6f, 0x0a, 0x1e, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0a, 0x65,
	0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x54, 0x69, 0x6d, 0x65, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x97, 0x02, 0x0a, 0x0d, 0x45,
	0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x50, 0x49, 0x12, 0x86, 0x01, 0x0a,
	0x19, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73,
	0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x2e, 0x74, 0x69, 0x6d,
	0x65, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x45, 0x73,
	0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x34, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x56, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x73, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7d, 0x0a, 0x16, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x56,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x30, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x31, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x56, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x8b, 0x01, 0x0a, 0x35, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x68, 0x65, 0x72, 0x6f, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x2e, 0x74, 0x69, 0x6d,
	0x65, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x42, 0x12,
	0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x68, 0x65, 0x72, 0x6f, 0x2f, 0x6c, 0x6f,
	0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_timeestimation_v1_estimation_api_proto_rawDescOnce sync.Once
	file_timeestimation_v1_estimation_api_proto_rawDescData = file_timeestimation_v1_estimation_api_proto_rawDesc
)

func file_timeestimation_v1_estimation_api_proto_rawDescGZIP() []byte {
	file_timeestimation_v1_estimation_api_proto_rawDescOnce.Do(func() {
		file_timeestimation_v1_estimation_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_timeestimation_v1_estimation_api_proto_rawDescData)
	})
	return file_timeestimation_v1_estimation_api_proto_rawDescData
}

var file_timeestimation_v1_estimation_api_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_timeestimation_v1_estimation_api_proto_goTypes = []interface{}{
	(*MultipleVendorsEstimationRequest)(nil),  // 0: timeestimation.v1.MultipleVendorsEstimationRequest
	(*MultipleVendorsEstimationResponse)(nil), // 1: timeestimation.v1.MultipleVendorsEstimationResponse
	(*SingleVendorEstimationRequest)(nil),     // 2: timeestimation.v1.SingleVendorEstimationRequest
	(*SingleVendorEstimationResponse)(nil),    // 3: timeestimation.v1.SingleVendorEstimationResponse
	(*v1.Customer)(nil),                       // 4: domain.v1.Customer
	(*v1.Vendor)(nil),                         // 5: domain.v1.Vendor
	(*MultiVendorTimeEstimation)(nil),         // 6: timeestimation.v1.MultiVendorTimeEstimation
	(*v1.Order)(nil),                          // 7: domain.v1.Order
	(*SingleVendorTimeEstimation)(nil),        // 8: timeestimation.v1.SingleVendorTimeEstimation
}
var file_timeestimation_v1_estimation_api_proto_depIdxs = []int32{
	4, // 0: timeestimation.v1.MultipleVendorsEstimationRequest.customer:type_name -> domain.v1.Customer
	5, // 1: timeestimation.v1.MultipleVendorsEstimationRequest.vendors:type_name -> domain.v1.Vendor
	6, // 2: timeestimation.v1.MultipleVendorsEstimationResponse.estimation:type_name -> timeestimation.v1.MultiVendorTimeEstimation
	4, // 3: timeestimation.v1.SingleVendorEstimationRequest.customer:type_name -> domain.v1.Customer
	5, // 4: timeestimation.v1.SingleVendorEstimationRequest.vendor:type_name -> domain.v1.Vendor
	7, // 5: timeestimation.v1.SingleVendorEstimationRequest.order:type_name -> domain.v1.Order
	8, // 6: timeestimation.v1.SingleVendorEstimationResponse.estimation:type_name -> timeestimation.v1.SingleVendorTimeEstimation
	0, // 7: timeestimation.v1.EstimationAPI.MultipleVendorsEstimation:input_type -> timeestimation.v1.MultipleVendorsEstimationRequest
	2, // 8: timeestimation.v1.EstimationAPI.SingleVendorEstimation:input_type -> timeestimation.v1.SingleVendorEstimationRequest
	1, // 9: timeestimation.v1.EstimationAPI.MultipleVendorsEstimation:output_type -> timeestimation.v1.MultipleVendorsEstimationResponse
	3, // 10: timeestimation.v1.EstimationAPI.SingleVendorEstimation:output_type -> timeestimation.v1.SingleVendorEstimationResponse
	9, // [9:11] is the sub-list for method output_type
	7, // [7:9] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_timeestimation_v1_estimation_api_proto_init() }
func file_timeestimation_v1_estimation_api_proto_init() {
	if File_timeestimation_v1_estimation_api_proto != nil {
		return
	}
	file_timeestimation_v1_estimation_response_dto_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_timeestimation_v1_estimation_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultipleVendorsEstimationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timeestimation_v1_estimation_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultipleVendorsEstimationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timeestimation_v1_estimation_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleVendorEstimationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timeestimation_v1_estimation_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleVendorEstimationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_timeestimation_v1_estimation_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_timeestimation_v1_estimation_api_proto_goTypes,
		DependencyIndexes: file_timeestimation_v1_estimation_api_proto_depIdxs,
		MessageInfos:      file_timeestimation_v1_estimation_api_proto_msgTypes,
	}.Build()
	File_timeestimation_v1_estimation_api_proto = out.File
	file_timeestimation_v1_estimation_api_proto_rawDesc = nil
	file_timeestimation_v1_estimation_api_proto_goTypes = nil
	file_timeestimation_v1_estimation_api_proto_depIdxs = nil
}

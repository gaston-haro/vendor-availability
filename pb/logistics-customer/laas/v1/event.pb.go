// Definitions of all message used in the private API and internal communication.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: laas/v1/event.proto

package v1

import (
	v11 "github.com/deliveryhero/logistics-customer/deliveryareas/v1"
	v1 "github.com/deliveryhero/logistics-customer/domain/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Aggregated vendor representation.
type SummarizedVendor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required fields
	VendorId             string                   `protobuf:"bytes,1,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"`
	GlobalEntityId       string                   `protobuf:"bytes,2,opt,name=global_entity_id,json=globalEntityId,proto3" json:"global_entity_id,omitempty"`
	Name                 string                   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	TestVendor           bool                     `protobuf:"varint,4,opt,name=test_vendor,json=testVendor,proto3" json:"test_vendor,omitempty"`
	DeliveryTypes        []v1.DeliveryType        `protobuf:"varint,5,rep,packed,name=delivery_types,json=deliveryTypes,proto3,enum=domain.v1.DeliveryType" json:"delivery_types,omitempty"`
	GeoStatus            VendorGeoStatus          `protobuf:"varint,6,opt,name=geo_status,json=geoStatus,proto3,enum=laas.v1.VendorGeoStatus" json:"geo_status,omitempty"`
	Location             *v1.Coordinate           `protobuf:"bytes,7,opt,name=location,proto3" json:"location,omitempty"`
	Active               bool                     `protobuf:"varint,8,opt,name=active,proto3" json:"active,omitempty"`
	CustomerTypes        []v1.CustomerType        `protobuf:"varint,9,rep,packed,name=customer_types,json=customerTypes,proto3,enum=domain.v1.CustomerType" json:"customer_types,omitempty"`
	FilterAttributes     []*VendorFilterAttribute `protobuf:"bytes,10,rep,name=filter_attributes,json=filterAttributes,proto3" json:"filter_attributes,omitempty"`
	VendorSchedule       *VendorSchedule          `protobuf:"bytes,11,opt,name=vendor_schedule,json=vendorSchedule,proto3" json:"vendor_schedule,omitempty"`
	VendorUnavailability *VendorUnavailability    `protobuf:"bytes,12,opt,name=vendor_unavailability,json=vendorUnavailability,proto3" json:"vendor_unavailability,omitempty"`
	Private              bool                     `protobuf:"varint,13,opt,name=private,proto3" json:"private,omitempty"`
	// Optional fields
	VerticalType               *wrapperspb.StringValue `protobuf:"bytes,30,opt,name=vertical_type,json=verticalType,proto3" json:"vertical_type,omitempty"`
	VerticalParent             *wrapperspb.StringValue `protobuf:"bytes,31,opt,name=vertical_parent,json=verticalParent,proto3" json:"vertical_parent,omitempty"`
	Tags                       []string                `protobuf:"bytes,32,rep,name=tags,proto3" json:"tags,omitempty"`
	KeyAccount                 *wrapperspb.BoolValue   `protobuf:"bytes,33,opt,name=key_account,json=keyAccount,proto3" json:"key_account,omitempty"`
	Contracted                 *wrapperspb.BoolValue   `protobuf:"bytes,34,opt,name=contracted,proto3" json:"contracted,omitempty"`
	Halal                      *wrapperspb.BoolValue   `protobuf:"bytes,35,opt,name=halal,proto3" json:"halal,omitempty"`
	AllowPreorder              *wrapperspb.BoolValue   `protobuf:"bytes,36,opt,name=allow_preorder,json=allowPreorder,proto3" json:"allow_preorder,omitempty"`
	AppliedDeliveryAreaEventId *wrapperspb.StringValue `protobuf:"bytes,37,opt,name=applied_delivery_area_event_id,json=appliedDeliveryAreaEventId,proto3" json:"applied_delivery_area_event_id,omitempty"`
	// list of vendor's nextAvailableAt timestamps in chronological order
	NextAvailableAtList          []*v1.UnixTimeMillis `protobuf:"bytes,38,rep,name=next_available_at_list,json=nextAvailableAtList,proto3" json:"next_available_at_list,omitempty"`
	VerticalTypeIds              []string             `protobuf:"bytes,39,rep,name=vertical_type_ids,json=verticalTypeIds,proto3" json:"vertical_type_ids,omitempty"`
	NextAvailableAtListUpdatedAt *v1.UnixTimeMillis   `protobuf:"bytes,40,opt,name=next_available_at_list_updated_at,json=nextAvailableAtListUpdatedAt,proto3" json:"next_available_at_list_updated_at,omitempty"`
	// list of vendor's nextClosedAt timestamps in chronological order
	NextClosedAtList []*v1.UnixTimeMillis `protobuf:"bytes,41,rep,name=next_closed_at_list,json=nextClosedAtList,proto3" json:"next_closed_at_list,omitempty"`
	Metadata         *v1.Metadata         `protobuf:"bytes,42,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *SummarizedVendor) Reset() {
	*x = SummarizedVendor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laas_v1_event_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SummarizedVendor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummarizedVendor) ProtoMessage() {}

func (x *SummarizedVendor) ProtoReflect() protoreflect.Message {
	mi := &file_laas_v1_event_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummarizedVendor.ProtoReflect.Descriptor instead.
func (*SummarizedVendor) Descriptor() ([]byte, []int) {
	return file_laas_v1_event_proto_rawDescGZIP(), []int{0}
}

func (x *SummarizedVendor) GetVendorId() string {
	if x != nil {
		return x.VendorId
	}
	return ""
}

func (x *SummarizedVendor) GetGlobalEntityId() string {
	if x != nil {
		return x.GlobalEntityId
	}
	return ""
}

func (x *SummarizedVendor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SummarizedVendor) GetTestVendor() bool {
	if x != nil {
		return x.TestVendor
	}
	return false
}

func (x *SummarizedVendor) GetDeliveryTypes() []v1.DeliveryType {
	if x != nil {
		return x.DeliveryTypes
	}
	return nil
}

func (x *SummarizedVendor) GetGeoStatus() VendorGeoStatus {
	if x != nil {
		return x.GeoStatus
	}
	return VendorGeoStatus_VENDOR_GEO_STATUS_INVALID
}

func (x *SummarizedVendor) GetLocation() *v1.Coordinate {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *SummarizedVendor) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *SummarizedVendor) GetCustomerTypes() []v1.CustomerType {
	if x != nil {
		return x.CustomerTypes
	}
	return nil
}

func (x *SummarizedVendor) GetFilterAttributes() []*VendorFilterAttribute {
	if x != nil {
		return x.FilterAttributes
	}
	return nil
}

func (x *SummarizedVendor) GetVendorSchedule() *VendorSchedule {
	if x != nil {
		return x.VendorSchedule
	}
	return nil
}

func (x *SummarizedVendor) GetVendorUnavailability() *VendorUnavailability {
	if x != nil {
		return x.VendorUnavailability
	}
	return nil
}

func (x *SummarizedVendor) GetPrivate() bool {
	if x != nil {
		return x.Private
	}
	return false
}

func (x *SummarizedVendor) GetVerticalType() *wrapperspb.StringValue {
	if x != nil {
		return x.VerticalType
	}
	return nil
}

func (x *SummarizedVendor) GetVerticalParent() *wrapperspb.StringValue {
	if x != nil {
		return x.VerticalParent
	}
	return nil
}

func (x *SummarizedVendor) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *SummarizedVendor) GetKeyAccount() *wrapperspb.BoolValue {
	if x != nil {
		return x.KeyAccount
	}
	return nil
}

func (x *SummarizedVendor) GetContracted() *wrapperspb.BoolValue {
	if x != nil {
		return x.Contracted
	}
	return nil
}

func (x *SummarizedVendor) GetHalal() *wrapperspb.BoolValue {
	if x != nil {
		return x.Halal
	}
	return nil
}

func (x *SummarizedVendor) GetAllowPreorder() *wrapperspb.BoolValue {
	if x != nil {
		return x.AllowPreorder
	}
	return nil
}

func (x *SummarizedVendor) GetAppliedDeliveryAreaEventId() *wrapperspb.StringValue {
	if x != nil {
		return x.AppliedDeliveryAreaEventId
	}
	return nil
}

func (x *SummarizedVendor) GetNextAvailableAtList() []*v1.UnixTimeMillis {
	if x != nil {
		return x.NextAvailableAtList
	}
	return nil
}

func (x *SummarizedVendor) GetVerticalTypeIds() []string {
	if x != nil {
		return x.VerticalTypeIds
	}
	return nil
}

func (x *SummarizedVendor) GetNextAvailableAtListUpdatedAt() *v1.UnixTimeMillis {
	if x != nil {
		return x.NextAvailableAtListUpdatedAt
	}
	return nil
}

func (x *SummarizedVendor) GetNextClosedAtList() []*v1.UnixTimeMillis {
	if x != nil {
		return x.NextClosedAtList
	}
	return nil
}

func (x *SummarizedVendor) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Vendor attributes used to filter filters with.
type VendorFilterAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field  v11.VendorFilterField `protobuf:"varint,1,opt,name=field,proto3,enum=deliveryareas.v1.VendorFilterField" json:"field,omitempty"`
	Values []string              `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *VendorFilterAttribute) Reset() {
	*x = VendorFilterAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laas_v1_event_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VendorFilterAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorFilterAttribute) ProtoMessage() {}

func (x *VendorFilterAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_laas_v1_event_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorFilterAttribute.ProtoReflect.Descriptor instead.
func (*VendorFilterAttribute) Descriptor() ([]byte, []int) {
	return file_laas_v1_event_proto_rawDescGZIP(), []int{1}
}

func (x *VendorFilterAttribute) GetField() v11.VendorFilterField {
	if x != nil {
		return x.Field
	}
	return v11.VendorFilterField(0)
}

func (x *VendorFilterAttribute) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

// Aggregated Vendor Delivery Area representation.
type SummarizedVendorGeoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VendorId             string                 `protobuf:"bytes,1,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"`
	GlobalEntityId       string                 `protobuf:"bytes,2,opt,name=global_entity_id,json=globalEntityId,proto3" json:"global_entity_id,omitempty"`
	ShrinkingCutPolygons []*ShrinkingCutPolygon `protobuf:"bytes,3,rep,name=shrinking_cut_polygons,json=shrinkingCutPolygons,proto3" json:"shrinking_cut_polygons,omitempty"`
	Metadata             *v1.Metadata           `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *SummarizedVendorGeoData) Reset() {
	*x = SummarizedVendorGeoData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laas_v1_event_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SummarizedVendorGeoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummarizedVendorGeoData) ProtoMessage() {}

func (x *SummarizedVendorGeoData) ProtoReflect() protoreflect.Message {
	mi := &file_laas_v1_event_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummarizedVendorGeoData.ProtoReflect.Descriptor instead.
func (*SummarizedVendorGeoData) Descriptor() ([]byte, []int) {
	return file_laas_v1_event_proto_rawDescGZIP(), []int{2}
}

func (x *SummarizedVendorGeoData) GetVendorId() string {
	if x != nil {
		return x.VendorId
	}
	return ""
}

func (x *SummarizedVendorGeoData) GetGlobalEntityId() string {
	if x != nil {
		return x.GlobalEntityId
	}
	return ""
}

func (x *SummarizedVendorGeoData) GetShrinkingCutPolygons() []*ShrinkingCutPolygon {
	if x != nil {
		return x.ShrinkingCutPolygons
	}
	return nil
}

func (x *SummarizedVendorGeoData) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Shrinking Cut Polygon representation.
type ShrinkingCutPolygon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string                        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PricingResponse      *FallbackPricingResponse      `protobuf:"bytes,2,opt,name=pricing_response,json=pricingResponse,proto3" json:"pricing_response,omitempty"`
	TimeEstimateResponse *FallbackTimeEstimateResponse `protobuf:"bytes,3,opt,name=time_estimate_response,json=timeEstimateResponse,proto3" json:"time_estimate_response,omitempty"`
	ShrinkingTags        []string                      `protobuf:"bytes,4,rep,name=shrinking_tags,json=shrinkingTags,proto3" json:"shrinking_tags,omitempty"`
	Status               ShrinkingCutPolygonStatus     `protobuf:"varint,5,opt,name=status,proto3,enum=laas.v1.ShrinkingCutPolygonStatus" json:"status,omitempty"`
	PolygonWkb           []byte                        `protobuf:"bytes,6,opt,name=polygon_wkb,json=polygonWkb,proto3" json:"polygon_wkb,omitempty"`
}

func (x *ShrinkingCutPolygon) Reset() {
	*x = ShrinkingCutPolygon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laas_v1_event_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShrinkingCutPolygon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShrinkingCutPolygon) ProtoMessage() {}

func (x *ShrinkingCutPolygon) ProtoReflect() protoreflect.Message {
	mi := &file_laas_v1_event_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShrinkingCutPolygon.ProtoReflect.Descriptor instead.
func (*ShrinkingCutPolygon) Descriptor() ([]byte, []int) {
	return file_laas_v1_event_proto_rawDescGZIP(), []int{3}
}

func (x *ShrinkingCutPolygon) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ShrinkingCutPolygon) GetPricingResponse() *FallbackPricingResponse {
	if x != nil {
		return x.PricingResponse
	}
	return nil
}

func (x *ShrinkingCutPolygon) GetTimeEstimateResponse() *FallbackTimeEstimateResponse {
	if x != nil {
		return x.TimeEstimateResponse
	}
	return nil
}

func (x *ShrinkingCutPolygon) GetShrinkingTags() []string {
	if x != nil {
		return x.ShrinkingTags
	}
	return nil
}

func (x *ShrinkingCutPolygon) GetStatus() ShrinkingCutPolygonStatus {
	if x != nil {
		return x.Status
	}
	return ShrinkingCutPolygonStatus_SHRINKING_CUT_POLYGON_STATUS_INVALID
}

func (x *ShrinkingCutPolygon) GetPolygonWkb() []byte {
	if x != nil {
		return x.PolygonWkb
	}
	return nil
}

// Summarized data for delivery area event.
type SummarizedDeliveryAreaEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GlobalEntityId string                  `protobuf:"bytes,1,opt,name=global_entity_id,json=globalEntityId,proto3" json:"global_entity_id,omitempty"`
	EventId        string                  `protobuf:"bytes,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	EventAction    EventAction             `protobuf:"varint,3,opt,name=event_action,json=eventAction,proto3,enum=laas.v1.EventAction" json:"event_action,omitempty"`
	PolygonWkb     []byte                  `protobuf:"bytes,4,opt,name=polygon_wkb,json=polygonWkb,proto3" json:"polygon_wkb,omitempty"`
	Active         bool                    `protobuf:"varint,5,opt,name=active,proto3" json:"active,omitempty"`
	ShrinkingValue *wrapperspb.DoubleValue `protobuf:"bytes,6,opt,name=shrinking_value,json=shrinkingValue,proto3" json:"shrinking_value,omitempty"`
	Messages       []*LocalizedMessage     `protobuf:"bytes,7,rep,name=messages,proto3" json:"messages,omitempty"`
	VendorFilters  *v11.VendorFilters      `protobuf:"bytes,8,opt,name=vendor_filters,json=vendorFilters,proto3" json:"vendor_filters,omitempty"`
	Metadata       *v1.Metadata            `protobuf:"bytes,9,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *SummarizedDeliveryAreaEvent) Reset() {
	*x = SummarizedDeliveryAreaEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laas_v1_event_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SummarizedDeliveryAreaEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummarizedDeliveryAreaEvent) ProtoMessage() {}

func (x *SummarizedDeliveryAreaEvent) ProtoReflect() protoreflect.Message {
	mi := &file_laas_v1_event_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummarizedDeliveryAreaEvent.ProtoReflect.Descriptor instead.
func (*SummarizedDeliveryAreaEvent) Descriptor() ([]byte, []int) {
	return file_laas_v1_event_proto_rawDescGZIP(), []int{4}
}

func (x *SummarizedDeliveryAreaEvent) GetGlobalEntityId() string {
	if x != nil {
		return x.GlobalEntityId
	}
	return ""
}

func (x *SummarizedDeliveryAreaEvent) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *SummarizedDeliveryAreaEvent) GetEventAction() EventAction {
	if x != nil {
		return x.EventAction
	}
	return EventAction_EVENT_ACTION_INVALID
}

func (x *SummarizedDeliveryAreaEvent) GetPolygonWkb() []byte {
	if x != nil {
		return x.PolygonWkb
	}
	return nil
}

func (x *SummarizedDeliveryAreaEvent) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *SummarizedDeliveryAreaEvent) GetShrinkingValue() *wrapperspb.DoubleValue {
	if x != nil {
		return x.ShrinkingValue
	}
	return nil
}

func (x *SummarizedDeliveryAreaEvent) GetMessages() []*LocalizedMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *SummarizedDeliveryAreaEvent) GetVendorFilters() *v11.VendorFilters {
	if x != nil {
		return x.VendorFilters
	}
	return nil
}

func (x *SummarizedDeliveryAreaEvent) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Schedule data for summarized vendors.
type VendorSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Using IANA-hosted time zone: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones.
	Timezone string `protobuf:"bytes,1,opt,name=timezone,proto3" json:"timezone,omitempty"`
	// Delivery schedule
	Schedules []*Schedule `protobuf:"bytes,2,rep,name=schedules,proto3" json:"schedules,omitempty"`
	// Delivery special days
	SpecialDays       []*SpecialDay `protobuf:"bytes,3,rep,name=special_days,json=specialDays,proto3" json:"special_days,omitempty"`
	PickupSchedules   []*Schedule   `protobuf:"bytes,4,rep,name=pickup_schedules,json=pickupSchedules,proto3" json:"pickup_schedules,omitempty"`
	PickupSpecialDays []*SpecialDay `protobuf:"bytes,5,rep,name=pickup_special_days,json=pickupSpecialDays,proto3" json:"pickup_special_days,omitempty"`
	Metadata          *v1.Metadata  `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *VendorSchedule) Reset() {
	*x = VendorSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laas_v1_event_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VendorSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorSchedule) ProtoMessage() {}

func (x *VendorSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_laas_v1_event_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorSchedule.ProtoReflect.Descriptor instead.
func (*VendorSchedule) Descriptor() ([]byte, []int) {
	return file_laas_v1_event_proto_rawDescGZIP(), []int{5}
}

func (x *VendorSchedule) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *VendorSchedule) GetSchedules() []*Schedule {
	if x != nil {
		return x.Schedules
	}
	return nil
}

func (x *VendorSchedule) GetSpecialDays() []*SpecialDay {
	if x != nil {
		return x.SpecialDays
	}
	return nil
}

func (x *VendorSchedule) GetPickupSchedules() []*Schedule {
	if x != nil {
		return x.PickupSchedules
	}
	return nil
}

func (x *VendorSchedule) GetPickupSpecialDays() []*SpecialDay {
	if x != nil {
		return x.PickupSpecialDays
	}
	return nil
}

func (x *VendorSchedule) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Weekly schedule of vendor.
type Schedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Day        DayOfWeek    `protobuf:"varint,1,opt,name=day,proto3,enum=laas.v1.DayOfWeek" json:"day,omitempty"`
	TimeRanges []*TimeRange `protobuf:"bytes,2,rep,name=time_ranges,json=timeRanges,proto3" json:"time_ranges,omitempty"`
}

func (x *Schedule) Reset() {
	*x = Schedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laas_v1_event_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Schedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schedule) ProtoMessage() {}

func (x *Schedule) ProtoReflect() protoreflect.Message {
	mi := &file_laas_v1_event_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schedule.ProtoReflect.Descriptor instead.
func (*Schedule) Descriptor() ([]byte, []int) {
	return file_laas_v1_event_proto_rawDescGZIP(), []int{6}
}

func (x *Schedule) GetDay() DayOfWeek {
	if x != nil {
		return x.Day
	}
	return DayOfWeek_DAY_OF_WEEK_INVALID
}

func (x *Schedule) GetTimeRanges() []*TimeRange {
	if x != nil {
		return x.TimeRanges
	}
	return nil
}

// Special days of vendor.
type SpecialDay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Date format is YYYY-MM-dd like 2010-02-18.
	Date       string       `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	TimeRanges []*TimeRange `protobuf:"bytes,2,rep,name=time_ranges,json=timeRanges,proto3" json:"time_ranges,omitempty"`
}

func (x *SpecialDay) Reset() {
	*x = SpecialDay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laas_v1_event_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecialDay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecialDay) ProtoMessage() {}

func (x *SpecialDay) ProtoReflect() protoreflect.Message {
	mi := &file_laas_v1_event_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecialDay.ProtoReflect.Descriptor instead.
func (*SpecialDay) Descriptor() ([]byte, []int) {
	return file_laas_v1_event_proto_rawDescGZIP(), []int{7}
}

func (x *SpecialDay) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *SpecialDay) GetTimeRanges() []*TimeRange {
	if x != nil {
		return x.TimeRanges
	}
	return nil
}

// Time range for schedule and special_days.
type TimeRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// "from" format is HH:mm, 00:00 <= from <= 23:59.
	From string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	// "to" format is HH:mm, 00:01 <= to <= 24:00.
	To string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *TimeRange) Reset() {
	*x = TimeRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laas_v1_event_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeRange) ProtoMessage() {}

func (x *TimeRange) ProtoReflect() protoreflect.Message {
	mi := &file_laas_v1_event_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeRange.ProtoReflect.Descriptor instead.
func (*TimeRange) Descriptor() ([]byte, []int) {
	return file_laas_v1_event_proto_rawDescGZIP(), []int{8}
}

func (x *TimeRange) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *TimeRange) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

// Top-level message to abstract the list of Offline Schedules.
type VendorUnavailability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OfflineSchedules []*OfflineSchedule `protobuf:"bytes,1,rep,name=offline_schedules,json=offlineSchedules,proto3" json:"offline_schedules,omitempty"`
	Metadata         *v1.Metadata       `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *VendorUnavailability) Reset() {
	*x = VendorUnavailability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laas_v1_event_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VendorUnavailability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorUnavailability) ProtoMessage() {}

func (x *VendorUnavailability) ProtoReflect() protoreflect.Message {
	mi := &file_laas_v1_event_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorUnavailability.ProtoReflect.Descriptor instead.
func (*VendorUnavailability) Descriptor() ([]byte, []int) {
	return file_laas_v1_event_proto_rawDescGZIP(), []int{9}
}

func (x *VendorUnavailability) GetOfflineSchedules() []*OfflineSchedule {
	if x != nil {
		return x.OfflineSchedules
	}
	return nil
}

func (x *VendorUnavailability) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Offline reason for a vendor with a specified start and end date.
type OfflineSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// start_date expressed as UTC ISO-8601 like "2010-02-18T06:22:33.442Z"
	// https://en.wikipedia.org/wiki/ISO_8601
	StartDate string `protobuf:"bytes,1,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	// end_date expressed as UTC ISO-8601 like "2010-02-18T06:22:33.442Z"
	// https://en.wikipedia.org/wiki/ISO_8601
	EndDate *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	// Types that are assignable to OfflineReason:
	//
	//	*OfflineSchedule_SpecialOfflineReason
	//	*OfflineSchedule_UnavailabilityReason
	OfflineReason isOfflineSchedule_OfflineReason `protobuf_oneof:"offline_reason"`
}

func (x *OfflineSchedule) Reset() {
	*x = OfflineSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laas_v1_event_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfflineSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfflineSchedule) ProtoMessage() {}

func (x *OfflineSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_laas_v1_event_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfflineSchedule.ProtoReflect.Descriptor instead.
func (*OfflineSchedule) Descriptor() ([]byte, []int) {
	return file_laas_v1_event_proto_rawDescGZIP(), []int{10}
}

func (x *OfflineSchedule) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *OfflineSchedule) GetEndDate() *wrapperspb.StringValue {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (m *OfflineSchedule) GetOfflineReason() isOfflineSchedule_OfflineReason {
	if m != nil {
		return m.OfflineReason
	}
	return nil
}

func (x *OfflineSchedule) GetSpecialOfflineReason() SpecialOfflineReason {
	if x, ok := x.GetOfflineReason().(*OfflineSchedule_SpecialOfflineReason); ok {
		return x.SpecialOfflineReason
	}
	return SpecialOfflineReason_SPECIAL_OFFLINE_REASON_INVALID
}

func (x *OfflineSchedule) GetUnavailabilityReason() string {
	if x, ok := x.GetOfflineReason().(*OfflineSchedule_UnavailabilityReason); ok {
		return x.UnavailabilityReason
	}
	return ""
}

type isOfflineSchedule_OfflineReason interface {
	isOfflineSchedule_OfflineReason()
}

type OfflineSchedule_SpecialOfflineReason struct {
	SpecialOfflineReason SpecialOfflineReason `protobuf:"varint,3,opt,name=special_offline_reason,json=specialOfflineReason,proto3,enum=laas.v1.SpecialOfflineReason,oneof"`
}

type OfflineSchedule_UnavailabilityReason struct {
	UnavailabilityReason string `protobuf:"bytes,4,opt,name=unavailability_reason,json=unavailabilityReason,proto3,oneof"`
}

func (*OfflineSchedule_SpecialOfflineReason) isOfflineSchedule_OfflineReason() {}

func (*OfflineSchedule_UnavailabilityReason) isOfflineSchedule_OfflineReason() {}

var File_laas_v1_event_proto protoreflect.FileDescriptor

var file_laas_v1_event_proto_rawDesc = []byte{
	0x0a, 0x13, 0x6c, 0x61, 0x61, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6c, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1d,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x61, 0x72, 0x65, 0x61, 0x73, 0x2f, 0x76, 0x31,
	0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x18, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x16, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x6c, 0x61, 0x61, 0x73,
	0x2f, 0x76, 0x31, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xde, 0x0b, 0x0a, 0x10, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x56,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x56, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x12, 0x3e, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x37, 0x0a, 0x0a, 0x67, 0x65, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6c, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x47, 0x65, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x09, 0x67, 0x65, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x3e, 0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x17, 0x2e,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x11, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x6c, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x52, 0x10, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x40, 0x0a, 0x0f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x61,
	0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x0e, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x12, 0x52, 0x0a, 0x15, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x75,
	0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x55, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x52, 0x14, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x55, 0x6e, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x12, 0x41, 0x0a, 0x0d, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x45, 0x0a, 0x0f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x76, 0x65,
	0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x20, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x12, 0x3b, 0x0a, 0x0b, 0x6b, 0x65, 0x79, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x0a, 0x6b, 0x65, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3a, 0x0a,
	0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x65, 0x64, 0x18, 0x22, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x05, 0x68, 0x61, 0x6c,
	0x61, 0x6c, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x68, 0x61, 0x6c, 0x61, 0x6c, 0x12, 0x41, 0x0a, 0x0e, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x70, 0x72, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x24, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x50, 0x72, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x60,
	0x0a, 0x1e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x1a, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x41, 0x72, 0x65, 0x61, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x4e, 0x0a, 0x16, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x61, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x26, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x69,
	0x78, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x52, 0x13, 0x6e, 0x65, 0x78,
	0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x2a, 0x0a, 0x11, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x27, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x73, 0x12, 0x62, 0x0a, 0x21,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x61,
	0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x69, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x69, 0x6c, 0x6c,
	0x69, 0x73, 0x52, 0x1c, 0x6e, 0x65, 0x78, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x41, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x48, 0x0a, 0x13, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x29, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x69, 0x78, 0x54, 0x69,
	0x6d, 0x65, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x52, 0x10, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x64, 0x41, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4a, 0x04, 0x08, 0x0e, 0x10,
	0x1e, 0x22, 0x6a, 0x0a, 0x15, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x61, 0x72, 0x65, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x05,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0xe5, 0x01,
	0x0a, 0x17, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x56, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x47, 0x65, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x52, 0x0a, 0x16, 0x73, 0x68, 0x72, 0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x75,
	0x74, 0x5f, 0x70, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6c, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x72, 0x69, 0x6e,
	0x6b, 0x69, 0x6e, 0x67, 0x43, 0x75, 0x74, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x52, 0x14,
	0x73, 0x68, 0x72, 0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x75, 0x74, 0x50, 0x6f, 0x6c, 0x79,
	0x67, 0x6f, 0x6e, 0x73, 0x12, 0x2f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd3, 0x02, 0x0a, 0x13, 0x53, 0x68, 0x72, 0x69, 0x6e, 0x6b,
	0x69, 0x6e, 0x67, 0x43, 0x75, 0x74, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x4b, 0x0a,
	0x10, 0x70, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6c, 0x61, 0x61, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x72, 0x69, 0x63, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0f, 0x70, 0x72, 0x69, 0x63, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x16, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6c, 0x61, 0x61,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d,
	0x65, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x14, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x68, 0x72, 0x69, 0x6e,
	0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0d, 0x73, 0x68, 0x72, 0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x67, 0x73, 0x12, 0x3a,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22,
	0x2e, 0x6c, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x72, 0x69, 0x6e, 0x6b, 0x69,
	0x6e, 0x67, 0x43, 0x75, 0x74, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f,
	0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x5f, 0x77, 0x6b, 0x62, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0a, 0x70, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x57, 0x6b, 0x62, 0x22, 0xcb, 0x03, 0x0a, 0x1b,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x41, 0x72, 0x65, 0x61, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x37, 0x0a, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6c, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x6c,
	0x79, 0x67, 0x6f, 0x6e, 0x5f, 0x77, 0x6b, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x70, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x57, 0x6b, 0x62, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x45, 0x0a, 0x0f, 0x73, 0x68, 0x72, 0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x6f,
	0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x73, 0x68, 0x72, 0x69, 0x6e,
	0x6b, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x61,
	0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x46, 0x0a, 0x0e, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x61, 0x72, 0x65, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x0d, 0x76, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x2f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc9, 0x02, 0x0a, 0x0e, 0x56, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x2f, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x61,
	0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x09,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x0c, 0x73, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x6c, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x44, 0x61, 0x79, 0x52, 0x0b, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x44, 0x61, 0x79,
	0x73, 0x12, 0x3c, 0x0a, 0x10, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x61,
	0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x0f,
	0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12,
	0x43, 0x0a, 0x13, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c,
	0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x44, 0x61,
	0x79, 0x52, 0x11, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c,
	0x44, 0x61, 0x79, 0x73, 0x12, 0x2f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x65, 0x0a, 0x08, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x12, 0x24, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,
	0x2e, 0x6c, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x79, 0x4f, 0x66, 0x57, 0x65,
	0x65, 0x6b, 0x52, 0x03, 0x64, 0x61, 0x79, 0x12, 0x33, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c,
	0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x22, 0x55, 0x0a, 0x0a,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x44, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x33,
	0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x22, 0x2f, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x74, 0x6f, 0x22, 0x8e, 0x01, 0x0a, 0x14, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x55,
	0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x45, 0x0a,
	0x11, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x61, 0x61, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x52, 0x10, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x89, 0x02, 0x0a, 0x0f, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x55, 0x0a, 0x16, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x6f, 0x66, 0x66,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1d, 0x2e, 0x6c, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x14, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x15, 0x75, 0x6e, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x14, 0x75, 0x6e, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x42,
	0x10, 0x0a, 0x0e, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x42, 0x6f, 0x0a, 0x2b, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x68, 0x65, 0x72, 0x6f, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x2e, 0x6c, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31,
	0x42, 0x0a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x32,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x68, 0x65, 0x72, 0x6f, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x2d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x2f, 0x6c, 0x61, 0x61, 0x73, 0x2f,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_laas_v1_event_proto_rawDescOnce sync.Once
	file_laas_v1_event_proto_rawDescData = file_laas_v1_event_proto_rawDesc
)

func file_laas_v1_event_proto_rawDescGZIP() []byte {
	file_laas_v1_event_proto_rawDescOnce.Do(func() {
		file_laas_v1_event_proto_rawDescData = protoimpl.X.CompressGZIP(file_laas_v1_event_proto_rawDescData)
	})
	return file_laas_v1_event_proto_rawDescData
}

var file_laas_v1_event_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_laas_v1_event_proto_goTypes = []interface{}{
	(*SummarizedVendor)(nil),             // 0: laas.v1.SummarizedVendor
	(*VendorFilterAttribute)(nil),        // 1: laas.v1.VendorFilterAttribute
	(*SummarizedVendorGeoData)(nil),      // 2: laas.v1.SummarizedVendorGeoData
	(*ShrinkingCutPolygon)(nil),          // 3: laas.v1.ShrinkingCutPolygon
	(*SummarizedDeliveryAreaEvent)(nil),  // 4: laas.v1.SummarizedDeliveryAreaEvent
	(*VendorSchedule)(nil),               // 5: laas.v1.VendorSchedule
	(*Schedule)(nil),                     // 6: laas.v1.Schedule
	(*SpecialDay)(nil),                   // 7: laas.v1.SpecialDay
	(*TimeRange)(nil),                    // 8: laas.v1.TimeRange
	(*VendorUnavailability)(nil),         // 9: laas.v1.VendorUnavailability
	(*OfflineSchedule)(nil),              // 10: laas.v1.OfflineSchedule
	(v1.DeliveryType)(0),                 // 11: domain.v1.DeliveryType
	(VendorGeoStatus)(0),                 // 12: laas.v1.VendorGeoStatus
	(*v1.Coordinate)(nil),                // 13: domain.v1.Coordinate
	(v1.CustomerType)(0),                 // 14: domain.v1.CustomerType
	(*wrapperspb.StringValue)(nil),       // 15: google.protobuf.StringValue
	(*wrapperspb.BoolValue)(nil),         // 16: google.protobuf.BoolValue
	(*v1.UnixTimeMillis)(nil),            // 17: domain.v1.UnixTimeMillis
	(*v1.Metadata)(nil),                  // 18: domain.v1.Metadata
	(v11.VendorFilterField)(0),           // 19: deliveryareas.v1.VendorFilterField
	(*FallbackPricingResponse)(nil),      // 20: laas.v1.FallbackPricingResponse
	(*FallbackTimeEstimateResponse)(nil), // 21: laas.v1.FallbackTimeEstimateResponse
	(ShrinkingCutPolygonStatus)(0),       // 22: laas.v1.ShrinkingCutPolygonStatus
	(EventAction)(0),                     // 23: laas.v1.EventAction
	(*wrapperspb.DoubleValue)(nil),       // 24: google.protobuf.DoubleValue
	(*LocalizedMessage)(nil),             // 25: laas.v1.LocalizedMessage
	(*v11.VendorFilters)(nil),            // 26: deliveryareas.v1.VendorFilters
	(DayOfWeek)(0),                       // 27: laas.v1.DayOfWeek
	(SpecialOfflineReason)(0),            // 28: laas.v1.SpecialOfflineReason
}
var file_laas_v1_event_proto_depIdxs = []int32{
	11, // 0: laas.v1.SummarizedVendor.delivery_types:type_name -> domain.v1.DeliveryType
	12, // 1: laas.v1.SummarizedVendor.geo_status:type_name -> laas.v1.VendorGeoStatus
	13, // 2: laas.v1.SummarizedVendor.location:type_name -> domain.v1.Coordinate
	14, // 3: laas.v1.SummarizedVendor.customer_types:type_name -> domain.v1.CustomerType
	1,  // 4: laas.v1.SummarizedVendor.filter_attributes:type_name -> laas.v1.VendorFilterAttribute
	5,  // 5: laas.v1.SummarizedVendor.vendor_schedule:type_name -> laas.v1.VendorSchedule
	9,  // 6: laas.v1.SummarizedVendor.vendor_unavailability:type_name -> laas.v1.VendorUnavailability
	15, // 7: laas.v1.SummarizedVendor.vertical_type:type_name -> google.protobuf.StringValue
	15, // 8: laas.v1.SummarizedVendor.vertical_parent:type_name -> google.protobuf.StringValue
	16, // 9: laas.v1.SummarizedVendor.key_account:type_name -> google.protobuf.BoolValue
	16, // 10: laas.v1.SummarizedVendor.contracted:type_name -> google.protobuf.BoolValue
	16, // 11: laas.v1.SummarizedVendor.halal:type_name -> google.protobuf.BoolValue
	16, // 12: laas.v1.SummarizedVendor.allow_preorder:type_name -> google.protobuf.BoolValue
	15, // 13: laas.v1.SummarizedVendor.applied_delivery_area_event_id:type_name -> google.protobuf.StringValue
	17, // 14: laas.v1.SummarizedVendor.next_available_at_list:type_name -> domain.v1.UnixTimeMillis
	17, // 15: laas.v1.SummarizedVendor.next_available_at_list_updated_at:type_name -> domain.v1.UnixTimeMillis
	17, // 16: laas.v1.SummarizedVendor.next_closed_at_list:type_name -> domain.v1.UnixTimeMillis
	18, // 17: laas.v1.SummarizedVendor.metadata:type_name -> domain.v1.Metadata
	19, // 18: laas.v1.VendorFilterAttribute.field:type_name -> deliveryareas.v1.VendorFilterField
	3,  // 19: laas.v1.SummarizedVendorGeoData.shrinking_cut_polygons:type_name -> laas.v1.ShrinkingCutPolygon
	18, // 20: laas.v1.SummarizedVendorGeoData.metadata:type_name -> domain.v1.Metadata
	20, // 21: laas.v1.ShrinkingCutPolygon.pricing_response:type_name -> laas.v1.FallbackPricingResponse
	21, // 22: laas.v1.ShrinkingCutPolygon.time_estimate_response:type_name -> laas.v1.FallbackTimeEstimateResponse
	22, // 23: laas.v1.ShrinkingCutPolygon.status:type_name -> laas.v1.ShrinkingCutPolygonStatus
	23, // 24: laas.v1.SummarizedDeliveryAreaEvent.event_action:type_name -> laas.v1.EventAction
	24, // 25: laas.v1.SummarizedDeliveryAreaEvent.shrinking_value:type_name -> google.protobuf.DoubleValue
	25, // 26: laas.v1.SummarizedDeliveryAreaEvent.messages:type_name -> laas.v1.LocalizedMessage
	26, // 27: laas.v1.SummarizedDeliveryAreaEvent.vendor_filters:type_name -> deliveryareas.v1.VendorFilters
	18, // 28: laas.v1.SummarizedDeliveryAreaEvent.metadata:type_name -> domain.v1.Metadata
	6,  // 29: laas.v1.VendorSchedule.schedules:type_name -> laas.v1.Schedule
	7,  // 30: laas.v1.VendorSchedule.special_days:type_name -> laas.v1.SpecialDay
	6,  // 31: laas.v1.VendorSchedule.pickup_schedules:type_name -> laas.v1.Schedule
	7,  // 32: laas.v1.VendorSchedule.pickup_special_days:type_name -> laas.v1.SpecialDay
	18, // 33: laas.v1.VendorSchedule.metadata:type_name -> domain.v1.Metadata
	27, // 34: laas.v1.Schedule.day:type_name -> laas.v1.DayOfWeek
	8,  // 35: laas.v1.Schedule.time_ranges:type_name -> laas.v1.TimeRange
	8,  // 36: laas.v1.SpecialDay.time_ranges:type_name -> laas.v1.TimeRange
	10, // 37: laas.v1.VendorUnavailability.offline_schedules:type_name -> laas.v1.OfflineSchedule
	18, // 38: laas.v1.VendorUnavailability.metadata:type_name -> domain.v1.Metadata
	15, // 39: laas.v1.OfflineSchedule.end_date:type_name -> google.protobuf.StringValue
	28, // 40: laas.v1.OfflineSchedule.special_offline_reason:type_name -> laas.v1.SpecialOfflineReason
	41, // [41:41] is the sub-list for method output_type
	41, // [41:41] is the sub-list for method input_type
	41, // [41:41] is the sub-list for extension type_name
	41, // [41:41] is the sub-list for extension extendee
	0,  // [0:41] is the sub-list for field type_name
}

func init() { file_laas_v1_event_proto_init() }
func file_laas_v1_event_proto_init() {
	if File_laas_v1_event_proto != nil {
		return
	}
	file_laas_v1_domain_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_laas_v1_event_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SummarizedVendor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laas_v1_event_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VendorFilterAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laas_v1_event_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SummarizedVendorGeoData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laas_v1_event_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShrinkingCutPolygon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laas_v1_event_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SummarizedDeliveryAreaEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laas_v1_event_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VendorSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laas_v1_event_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Schedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laas_v1_event_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecialDay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laas_v1_event_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laas_v1_event_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VendorUnavailability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laas_v1_event_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfflineSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_laas_v1_event_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*OfflineSchedule_SpecialOfflineReason)(nil),
		(*OfflineSchedule_UnavailabilityReason)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_laas_v1_event_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_laas_v1_event_proto_goTypes,
		DependencyIndexes: file_laas_v1_event_proto_depIdxs,
		MessageInfos:      file_laas_v1_event_proto_msgTypes,
	}.Build()
	File_laas_v1_event_proto = out.File
	file_laas_v1_event_proto_rawDesc = nil
	file_laas_v1_event_proto_goTypes = nil
	file_laas_v1_event_proto_depIdxs = nil
}
